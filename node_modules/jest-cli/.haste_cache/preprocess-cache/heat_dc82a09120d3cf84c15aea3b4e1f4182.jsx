"use strict";Object.defineProperty(exports, "__esModule", { value: true }); // istanbul ignore next
var _createClass = (function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};})(); // istanbul ignore next
var _get = function get(_x, _x2, _x3) {var _again = true;_function: while (_again) {var object = _x, property = _x2, receiver = _x3;desc = parent = getter = undefined;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {var parent = Object.getPrototypeOf(object);if (parent === null) {return undefined;} else {_x = parent;_x2 = property;_x3 = receiver;_again = true;continue _function;}} else if ("value" in desc) {return desc.value;} else {var getter = desc.get;if (getter === undefined) {return undefined;}return getter.call(receiver);}}}; // istanbul ignore next
function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { "default": obj };} // istanbul ignore next
function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}} // istanbul ignore next
function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) subClass.__proto__ = superClass;} // import HeatsinkStore from "./stores/heatsink_store.jsx"
var _storesHeat_store = require("./stores/heat_store");var _storesHeat_store2 = _interopRequireDefault(_storesHeat_store);var _actionsHeat_actions = require("./actions/heat_actions");var _actionsHeat_actions2 = _interopRequireDefault(_actionsHeat_actions);var _storesMap_store = require("./stores/map_store");var _storesMap_store2 = _interopRequireDefault(_storesMap_store);var _constantsMap_constants = require("./constants/map_constants");var _constantsMap_constants2 = _interopRequireDefault(_constantsMap_constants);var _storesCooldown_store = require(
"./stores/cooldown_store");var _storesCooldown_store2 = _interopRequireDefault(_storesCooldown_store);var _gauge = require(
"./gauge");var _gauge2 = _interopRequireDefault(_gauge);var React = require("react");var HeatsinkStore = require("./stores/heatsink_store.jsx");var 

CurrentHeat = (function (_React$Component) {

  function CurrentHeat(props) {_classCallCheck(this, CurrentHeat);
    _get(Object.getPrototypeOf(CurrentHeat.prototype), "constructor", this).call(this, props);
    this.state = _storesHeat_store2["default"].get_new_data();}_inherits(CurrentHeat, _React$Component);_createClass(CurrentHeat, [{ key: "componentDidMount", value: 


    function componentDidMount() {
      this.store_data = HeatsinkStore.get_new_data();
      // this.calculate_capacity_and_draw()
      // HeatsinkStore.addChangeListener(this.calculate_capacity_and_draw.bind(this))
      _storesHeat_store2["default"].addChangeListener(this.update_heat.bind(this));
      // MapStore.on(MapConstants.MAP_CHANGED, HeatActions.update_capacity)
      _actionsHeat_actions2["default"].update_capacity();
      this.update_heat();

      this.cooling_cycle = setInterval(this.release_heat.bind(this), 100);} }, { key: "componentWillUnmount", value: 



    function componentWillUnmount() {
      clearInterval(this.cooling_cycle);} }, { key: "update_heat", value: 


    function update_heat() {
      this.setState(_storesHeat_store2["default"].get_new_data());} }, { key: "release_heat", value: 


    function release_heat() {
      if (this.state.value > 0) {
        var amount = _storesCooldown_store2["default"].get_new_data().cool_rate / 10;
        _actionsHeat_actions2["default"].release_heat(amount);}} }, { key: "gauge_level", value: 



    function gauge_level() {
      var level = this.state.value / this.state.capacity;
      level = level * 100;
      return level;} }, { key: "render", value: 


    function render() {
      return (
      React.createElement("current_heat", { className: "info_item" }, 
      React.createElement("div", { className: "title" }, "Heat"), 


      React.createElement("div", { className: "readings" }, 
      React.createElement("div", { className: "reading left" }, 
      this.state.value.toFixed(2), 
      React.createElement("span", { className: "label" }, "Current")), 


      React.createElement("div", { className: "divider" }, ":"), 

      React.createElement("div", { className: "reading right" }, 
      this.state.capacity.toFixed(2), 
      React.createElement("span", { className: "label" }, "Capacity"))), 




      React.createElement(_gauge2["default"], { gauge_level: this.gauge_level(), color: "red" })));} }]);return CurrentHeat;})(React.Component);exports["default"] = 






CurrentHeat;module.exports = exports["default"];