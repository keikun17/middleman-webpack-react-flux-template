'use strict';Object.defineProperty(exports, '__esModule', { value: true }); // istanbul ignore next
var _createClass = (function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};})(); // istanbul ignore next
var _get = function get(_x, _x2, _x3) {var _again = true;_function: while (_again) {var object = _x, property = _x2, receiver = _x3;desc = parent = getter = undefined;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {var parent = Object.getPrototypeOf(object);if (parent === null) {return undefined;} else {_x = parent;_x2 = property;_x3 = receiver;_again = true;continue _function;}} else if ('value' in desc) {return desc.value;} else {var getter = desc.get;if (getter === undefined) {return undefined;}return getter.call(receiver);}}}; // istanbul ignore next
function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { 'default': obj };} // istanbul ignore next
function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError('Cannot call a class as a function');}} // istanbul ignore next
function _inherits(subClass, superClass) {if (typeof superClass !== 'function' && superClass !== null) {throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) subClass.__proto__ = superClass;}var _events = require('events');var _app_dispatcher = require('../app_dispatcher');var _app_dispatcher2 = _interopRequireDefault(_app_dispatcher);var _constantsArmory_constants = require('../constants/armory_constants');var _constantsArmory_constants2 = _interopRequireDefault(_constantsArmory_constants);var _weapons_list = require('../weapons_list');var _weapons_list2 = _interopRequireDefault(_weapons_list);var CHANGE = 'ARMORY_UPDATED';

var data = { 
  selected_faction: 'innersphere', 
  weapons_list: _weapons_list2['default'] };


/**
 * Toggles the list of weapons in the armory between IS and Clans
 */

var toggle_weapons_list = function toggle_weapons_list() {
  switch (data.selected_faction) {
    case 'innersphere':
      data.selected_faction = 'clan';
      break;
    case 'clan':
      data.selected_faction = 'innersphere';
      break;}};var 




ArmoryStore = (function (_EventEmitter) {function ArmoryStore() {_classCallCheck(this, ArmoryStore);_get(Object.getPrototypeOf(ArmoryStore.prototype), 'constructor', this).apply(this, arguments);}_inherits(ArmoryStore, _EventEmitter);_createClass(ArmoryStore, [{ key: 'get_new_data', 

    // move this to store base class
    value: function get_new_data() {
      return data;} }, { key: 'emitChange', 


    // move this to store base class
    value: function emitChange() {
      this.emit(CHANGE);} }, { key: 'addChangeListener', 


    // move this to store base class
    value: function addChangeListener(callback) {
      this.on(CHANGE, callback);} }, { key: 'removeChangeListener', 


    // move this to store base class
    value: function removeChangeListener(callback) {
      this.removeListener(CHANGE, callback);} }]);return ArmoryStore;})(_events.EventEmitter);




var _ArmoryStore = new ArmoryStore();exports['default'] = 

_ArmoryStore;

_ArmoryStore.dispatch_token = _app_dispatcher2['default'].register(function (payload) {
  var action_type = payload.action_type;

  switch (action_type) {
    case _constantsArmory_constants2['default'].ARMORY_TOGGLE_FACTION:
      toggle_weapons_list();
      _ArmoryStore.emit(CHANGE);
      break;}});module.exports = exports['default'];